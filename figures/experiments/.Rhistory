select(appId, capacity) %>%
separate(input, into = c(NA, "capacity", NA, NA), sep = "\\")
spark %>% separate(params, into = c(NA,"input"), sep = " ") %>%
select(appId, input) %>%
separate(input, into = c(NA, "capacity", NA, NA), sep = "\\")
spark %>% separate(params, into = c(NA,"input"), sep = " ") %>%
select(appId, input) %>%
separate(input, into = c(NA, "capacity", NA, NA), sep = "/")
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
START = "Getting LDCELs for B"
END   = "Merging DCELs"
pattern = paste0(START,"|",END)
fields = c("time", "duration", "appId", "phase")
require(tidyverse)
require(lubridate)
paramsPattern = "input1"
getParams <- function(command){
params = str_trim(str_split(command, "--")[[1]])
params = params[grepl(paramsPattern, params)]
return(paste(params, collapse = " "))
}
log = enframe(readLines("nohup.txt"))
spark = log %>% filter(grepl(value, pattern = "SparkSubmit ")) %>%
separate(value, into = c("time", "duration", "appId", "command"), sep = "\\|")
spark$params = spark$command %>% map(getParams)
spark = spark %>% separate(params, into = c(NA,"input"), sep = " ") %>%
select(appId, input) %>%
separate(input, into = c(NA, "capacity", NA, NA), sep = "/")
START = "Getting LDCELs for B"
END   = "Merging DCELs"
pattern = paste0(START,"|",END)
fields = c("time", "duration", "appId", "phase")
log %>% filter(grepl(value, pattern = pattern))
log %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|")
log %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase), duration = as.numeric(duration) / 1000.0)
log %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase), duration = as.numeric(duration) / 1000.0)
log %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase), duration = as.numeric(duration) / 1000.0) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS"))
log %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase), duration = as.numeric(duration) / 1000.0) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time, duration)
sdcel0 %>% select(appId, phase, time) %>% pivot_wider(names_from = phase, values_from = time)
sdcel1 = sdcel0 %>% select(appId, phase, time) %>% pivot_wider(names_from = phase, values_from = time)
names(sdcel1) = c("appId", "read", "merge")
sdcel = sdcel1 %>% mutate(time = merge - read)
View(sdcel)
spark %>% inner_join(sdcel, by = "appId") %>% select(capacity, time)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
sample = c("2", "5", "10", "25", "50", "100")
"2" in sample
"2" %in% sample
"2000" %in% sample
data
data$capacity
data %>% filter(capacity %in% sample)
sample = c("2", "5", "10", "25", "50", "100")
p = ggplot(data = data %>% filter(capacity %in% sample), aes(x = capacity, y = time)) +
geom_bar(stat="identity", position=position_dodge(width = 0.75), width = 0.7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x="Max Capacity per Cell", y="Time [min]", title="Execution time by maximum capacity per cell")
plot(p)
sample = c("2", "5", "10", "25", "50")
p = ggplot(data = data %>% filter(capacity %in% sample), aes(x = capacity, y = time)) +
geom_bar(stat="identity", position=position_dodge(width = 0.75), width = 0.7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x="Max Capacity per Cell", y="Time [sec]", title="Execution time by maximum capacity per cell")
plot(p)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
View(data)
enframe(readLines("cgal.txt"))
pattern = "Time for A: |Time for B: |Time for overlay: "
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern))
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, time, NA))
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, time, NA), sep = " ")
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ")
rep(1:3)
rep(1:3, 3)
rep(1:3, times = 3, each = 3)
rep(1:3, each = 3)
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(run = rep(1:3, each = 3))
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(run = rep(1:3, each = 3)) %>% # Modify for more runs...
group_by(run) %>% summarise(time = mean(time))
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(run = rep(1:3, each = 3))
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:3, each = 3)) %>% # Modify for more runs...
group_by(run) %>% summarise(time = mean(time))
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:3, each = 3)) %>% # Modify for more runs...
group_by(run) %>% summarise(time = sum(time))
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:3, each = 3), capacity = "cgal") %>% # Modify for more runs...
group_by(capacity, run) %>% summarise(time = sum(time))
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:3, each = 3), capacity = "cgal") %>% # Modify for more runs...
group_by(capacity, run) %>% summarise(time = sum(time)) %>% ungroup() %>%
group_by(run) %>% summarise(time = mean(time))
enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:3, each = 3), capacity = "cgal") %>% # Modify for more runs...
group_by(capacity, run) %>% summarise(time = sum(time)) %>% ungroup() %>%
group_by(capacity) %>% summarise(time = mean(time))
View(data)
data
data %>% union(cgal)
cgal = enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:3, each = 3), capacity = "cgal") %>% # Modify for more runs...
group_by(capacity, run) %>% summarise(time = sum(time)) %>% ungroup() %>%
group_by(capacity) %>% summarise(time = mean(time))
cgal
data
data %>% union(cgal)
cgal = enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:3, each = 3), capacity = "cgal") %>% # Modify for more runs...
group_by(capacity, run) %>% summarise(time = sum(time)) %>% ungroup() %>%
group_by(capacity) %>% summarise(time = as.duration(mean(time)))
cgal = enframe(readLines("cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:3, each = 3), capacity = "cgal") %>% # Modify for more runs...
group_by(capacity, run) %>% summarise(time = sum(time)) %>% ungroup() %>%
group_by(capacity) %>% summarise(time = as.duration(mean(time)))
cgal
data %>% union(cgal)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
require(tidyverse)
require(lubridate)
paramsPattern = "input1"
getParams <- function(command){
params = str_trim(str_split(command, "--")[[1]])
params = params[grepl(paramsPattern, params)]
return(paste(params, collapse = " "))
}
log = enframe(readLines("capacity.txt"))
spark = log %>% filter(grepl(value, pattern = "SparkSubmit ")) %>%
separate(value, into = c("time", "duration", "appId", "command"), sep = "\\|")
spark$params = spark$command %>% map(getParams)
spark = spark %>% separate(params, into = c(NA,"input"), sep = " ") %>%
select(appId, input) %>%
separate(input, into = c(NA, "capacity", NA, NA), sep = "/")
START = "Getting LDCELs for B"
END   = "Merging DCELs"
pattern = paste0(START,"|",END)
fields = c("time", "duration", "appId", "phase")
sdcel0 = log %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase), duration = as.numeric(duration) / 1000.0) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time, duration)
sdcel1 = sdcel0 %>% select(appId, phase, time) %>% pivot_wider(names_from = phase, values_from = time)
names(sdcel1) = c("appId", "read", "merge")
sdcel = sdcel1 %>% mutate(time = merge - read)
pattern = "Time for A: |Time for B: |Time for overlay: "
cgal = enframe(readLines("~/RIDIR/Code/CGAL/DCEL/cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:5, each = 3), capacity = " ") %>% # Modify for more runs...
group_by(capacity, run) %>% summarise(time = sum(time)) %>% ungroup() %>%
group_by(capacity) %>% summarise(time = as.duration(mean(time))) %>%
mutate(method = "CGAL")
data = spark %>% inner_join(sdcel, by = "appId") %>% select(capacity, time) %>%
group_by(capacity) %>% summarise(time = mean(time)) %>%
mutate(method = "SDCEL") # %>% union(cgal)
data$capacity = factor(data$capacity, levels = c("1", "2", "5", "10", "25", "50", "100", "200", "500", "1000"))
bar1 = ggplot(data = data, aes(x = capacity, y = time)) +
geom_bar(stat="identity", position=position_dodge(width = 0.75), width = 0.7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(~method) +
labs(x="Max Capacity per Cell", y="Time [sec]", title="Execution time by maximum capacity per cell")
bar2 = ggplot(data = cgal, aes(x = capacity, y = time)) +
geom_bar(stat="identity", position=position_dodge(width = 0.75), width = 0.7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(~method) +
labs(x="", y="", title="")
bars = gridExtra::grid.arrange(bar1, bar2, ncol = 2)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
library(cowplot)
install.packages("cowplot")
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
plot_grid(bar1, bar2, align = "h", ncol = 2, rel_widths = c(9/10, 1/10))
plot_grid(bar1, bar2, align = "h", ncol = 2, rel_widths = c(8/10, 2/10))
plot_grid(bar1, bar2, align = "h", ncol = 2, rel_widths = c(6/10, 4/10))
plot_grid(bar1, bar2, align = "h", ncol = 2, rel_widths = c(6/10, 2/10))
bar1 = ggplot(data = data, aes(x = capacity, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(~method) +
scale_y_continuous(breaks = seq(0, 800, 200)) + coord_cartesian(ylim = c(0, 800)) +
labs(x="Max Capacity per Cell", y="Time [sec]", title="Execution time by maximum capacity per cell")
bar2 = ggplot(data = cgal, aes(x = capacity, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(~method) +
scale_y_continuous(breaks = seq(0, 800, 200)) + coord_cartesian(ylim = c(0, 800)) +
labs(x="", y="", title="")
bars = gridExtra::grid.arrange(bar1, bar2, ncol = 2)
plot(bars)
library(cowplot)
plot_grid(bar1, bar2, align = "h", ncol = 2, rel_widths = c(6/10, 2/10))
plot_grid(bar1, bar2, align = "h", ncol = 2, rel_widths = c(6/10, 1/10))
plot_grid(bar1, bar2, align = "h", ncol = 2, rel_widths = c(6/10, 2/10))
plot_grid(bar1, bar2, align = "h", ncol = 2, rel_widths = c(6/10, 1.25/10))
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/capacity.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/performance.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
enframe(readLines("local1.txt"))
local0 %>% filter(grepl(value, pattern = pattern))
local0 = enframe(readLines("local.txt"))
local0 %>% filter(grepl(value, pattern = pattern))
local0 %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|")
filter(grepl(value, pattern = pattern))
log %>% filter(grepl(value, pattern = pattern))
fields = c("time", "duration","appId", "phase")
local0 = enframe(readLines("local.txt"))
local0 %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|")
local0 %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase))
local0 %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase)) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS"))
local0 %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase)) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time)
ggplot(data = local, aes(x = capacity, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks.x = element_blank()) + facet_grid(~method) +
scale_y_continuous(breaks = seq(0, 1000, 200)) + coord_cartesian(ylim = c(0, 1000)) +
labs(x="", y="", title="")
local = local0 %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase)) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time)
View(local)
fields = c("time", "duration","appId", "phase")
local0 = enframe(readLines("local.txt"))
local1 = local0 %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase)) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time)%>% pivot_wider(names_from = phase, values_from = time)
names(local) = c("appId", "read", "merge")
local = local1 %>% mutate(time = merge - read)
fields = c("time", "duration","appId", "phase")
fields = c("time", "duration","appId", "phase")
local0 = enframe(readLines("local.txt")) %>%
filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase)) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time) %>%
pivot_wider(names_from = phase, values_from = time)
names(local0) = c("appId", "read", "merge")
local = local0 %>% mutate(time = merge - read)
View(local)
q = ggplot(data = local, aes(x = partitions, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks.x = element_blank()) +
facet_grid(~method) +
scale_y_continuous(breaks = seq(0, 500, 100)) +
coord_cartesian(ylim = c(0, 500)) +
labs(x="", y="", title="")
plot(q)
fields = c("time", "duration","appId", "phase")
local0 = enframe(readLines("local.txt")) %>%
filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase)) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time) %>%
pivot_wider(names_from = phase, values_from = time) %>%
mutate(method = "1-core", partitions = "")
names(local0) = c("appId", "read", "merge")
local = local0 %>% mutate(time = merge - read) %>%
select(method, partitions, time)
fields = c("time", "duration","appId", "phase")
local0 = enframe(readLines("local.txt")) %>%
filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase)) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time) %>%
pivot_wider(names_from = phase, values_from = time) %>%
mutate(method = "1-core", partitions = "")
local0
names(local0) = c("appId", "read", "merge", "method", "partitions")
local = local0 %>% mutate(time = merge - read) %>%
select(method, partitions, time)
local
q = ggplot(data = local, aes(x = partitions, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks.x = element_blank()) +
facet_grid(~method) +
scale_y_continuous(breaks = seq(0, 500, 100)) +
coord_cartesian(ylim = c(0, 500)) +
labs(x="", y="", title="")
plot(q)
local = local0 %>% mutate(time = difftime(merge, read, units = "min")) %>%
select(method, partitions, time)
View(local)
q = ggplot(data = local, aes(x = partitions, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks.x = element_blank()) +
facet_grid(~method) +
scale_y_continuous(breaks = seq(0, 500, 100)) +
coord_cartesian(ylim = c(0, 500)) +
labs(x="", y="", title="")
fields = c("time", "duration","appId", "phase")
local0 = enframe(readLines("local.txt")) %>%
filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase)) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time) %>%
pivot_wider(names_from = phase, values_from = time) %>%
mutate(method = "1-core", partitions = "")
names(local0) = c("appId", "read", "merge", "method", "partitions")
local = local0 %>% mutate(time = difftime(merge, read, units = "min")) %>%
select(method, partitions, time)
q = ggplot(data = local, aes(x = partitions, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks.x = element_blank()) +
facet_grid(~method) +
scale_y_continuous(breaks = seq(0, 500, 100)) +
coord_cartesian(ylim = c(0, 500)) +
labs(x="", y="", title="")
plot(q)
ymin = 0
ymax = 350
ytic = 100
q = ggplot(data = local, aes(x = partitions, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks.x = element_blank()) +
facet_grid(~method) +
scale_y_continuous(breaks = seq(ymin, ymax, ytic)) + coord_cartesian(ylim = c(ymin, ymax)) +
labs(x="", y="", title="")
plot(q)
p = ggplot(data = data, aes(x = partitions, y = time)) +
geom_bar(stat="identity", position=position_dodge(width = 0.75), width = 0.7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(breaks = seq(ymin, ymax, ytic)) + coord_cartesian(ylim = c(ymin, ymax)) +
labs(x="Partitions (x1000)", y="Time [min]", title="Execution time by number of partitions")
plot(p)
plot_grid(p, q, align = "h", ncol = 2, rel_widths = c(6/10, 1/10))
library(cowplot)
plot_grid(p, q, align = "h", ncol = 2, rel_widths = c(6/10, 1/10))
data = spark %>% inner_join(sdcel, by = "appId") %>% select(partitions, time) %>%
group_by(partitions) %>% summarise(time = mean(time)) %>% mutate(method = "Cluster")
data$partitions = factor(data$partitions, levels = c("2", "4", "6", "8", "10", "12", "14"))
p = ggplot(data = data, aes(x = partitions, y = time)) +
geom_bar(stat="identity", position=position_dodge(width = 0.75), width = 0.7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_grid(~method) +
scale_y_continuous(breaks = seq(ymin, ymax, ytic)) + coord_cartesian(ylim = c(ymin, ymax)) +
labs(x="Partitions (x1000)", y="Time [min]", title="Execution time by number of partitions")
plot(p)
q = ggplot(data = local, aes(x = partitions, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks.x = element_blank()) +
facet_grid(~method) +
scale_y_continuous(breaks = seq(ymin, ymax, ytic)) + coord_cartesian(ylim = c(ymin, ymax)) +
labs(x="", y="", title="")
plot(q)
plot_grid(p, q, align = "h", ncol = 2, rel_widths = c(6/10, 2/10))
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/gadm.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/ca.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/scaleup2.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/scaleup2.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/scaleup2.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/speedup.R', echo=TRUE)
source('~/RIDIR/Meetings/next/figures/speedup.R', echo=TRUE)
source('~/RIDIR/Code/R/Experiments_v1.0/ca.R', echo=TRUE)
data
data %>% recode(capacity, 1 = 15)
data %>% recode(capacity, "1" = "15")
data$capacity
data %>% recode(capacity, '1' = '15')
data %>% recode(capacity, 1 = '15')
data %>% recode(capacity, `1` = `15`)
data %>% recode(capacity, 1 = "15")
data
recode(data$capacity, 1 = "15")
recode(data$capacity, 1 = 15)
recode(data$capacity, "1" = "15")
recode(data$capacity, "1"="15", "2"="12.5", "5"="10", "10"="7", "25"="4", "50"="2", "100"="1", "200"="0.5", "500"="0.2", "1000"="0.1")
data$capacity
data$partitions = recode(data$capacity, "1"="15", "2"="12.5", "5"="10", "10"="7", "25"="4", "50"="2", "100"="1", "200"="0.5", "500"="0.2", "1000"="0.1")
data
source('~/RIDIR/Code/R/Experiments_v1.0/ca.R', echo=TRUE)
require(tidyverse)
require(lubridate)
library(cowplot)
paramsPattern = "input1"
getParams <- function(command){
params = str_trim(str_split(command, "--")[[1]])
params = params[grepl(paramsPattern, params)]
return(paste(params, collapse = " "))
}
log = enframe(readLines("ca.txt"))
spark = log %>% filter(grepl(value, pattern = "SparkSubmit ")) %>%
separate(value, into = c("time", "duration", "appId", "command"), sep = "\\|")
spark$params = spark$command %>% map(getParams)
spark = spark %>% separate(params, into = c(NA,"input"), sep = " ") %>%
select(appId, input) %>%
separate(input, into = c(NA, "capacity", NA, NA), sep = "/")
START = "Getting LDCELs for B"
END   = "Merging DCELs"
pattern = paste0(START,"|",END)
fields = c("time", "duration", "appId", "phase")
sdcel0 = log %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, fields, sep = "\\|") %>%
mutate(phase = str_trim(phase), duration = as.numeric(duration) / 1000.0) %>%
mutate(time = parse_date_time(str_replace(time,",","."), "%Y-%m-%d %H:%M:%OS")) %>%
select(appId, phase, time, duration)
sdcel1 = sdcel0 %>% select(appId, phase, time) %>% pivot_wider(names_from = phase, values_from = time)
names(sdcel1) = c("appId", "read", "merge")
sdcel = sdcel1 %>% mutate(time = merge - read)
pattern = "Time for A: |Time for B: |Time for overlay: "
cgal = enframe(readLines("~/RIDIR/Code/CGAL/DCEL/cgal.txt")) %>% filter(grepl(value, pattern = pattern)) %>%
separate(value, into = c(NA, NA, NA, NA, "time", NA), sep = " ") %>%
mutate(time = as.numeric(time)) %>%
mutate(run = rep(1:5, each = 3), capacity = "") %>% # Modify for more runs...
group_by(capacity, run) %>% summarise(time = sum(time)) %>% ungroup() %>%
group_by(capacity) %>% summarise(time = as.duration(mean(time))) %>%
mutate(method = "CGAL")
data = spark %>% inner_join(sdcel, by = "appId") %>% select(capacity, time) %>%
group_by(capacity) %>% summarise(time = mean(time)) %>%
mutate(method = "SDCEL") # %>% union(cgal)
data$capacity = factor(data$capacity, levels = c("1", "2", "5", "10", "25", "50", "100", "200", "500", "1000"))
data$partitions = recode(data$capacity, "1"="15", "2"="12.5", "5"="10", "10"="7", "25"="4", "50"="2", "100"="1", "200"="0.5", "500"="0.2", "1000"="0.1")
View(data)
ggplot(data = data, aes(x = partitions, y = time))
ggplot(data = data, aes(x = partitions, y = time)) +
geom_bar(stat="identity", width = 0.75) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(~method) +
scale_y_continuous(breaks = seq(0, 800, 200)) + coord_cartesian(ylim = c(0, 800)) +
labs(x="Max Capacity per Cell", y="Time [sec]", title="Execution time by maximum capacity per cell compared with CGAL")
source('~/RIDIR/Code/R/Experiments_v1.0/ca.R', echo=TRUE)
View(cgal)
source('~/RIDIR/Code/R/Experiments_v1.0/ca.R', echo=TRUE)
source('~/RIDIR/Code/R/Experiments_v1.0/ca.R', echo=TRUE)
source('~/RIDIR/Code/R/Experiments_v1.0/ca.R', echo=TRUE)
source('~/RIDIR/Code/R/Experiments_v1.0/ca.R', echo=TRUE)
